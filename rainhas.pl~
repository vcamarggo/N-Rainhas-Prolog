%% ------------------- VERSÃO GERAR E TESTAR COM PERMUTAÇÕES -------------------

% rainhas_p(Q, N) is nondet
% Verdadeiro se Q é uma solução de tamanho N com N rainhas.
% Este predicado constrói as possíves soluções do N-rainhas.
rainhas_p(Q, N) :-
	sequencia(1, N, R),
	permutacao(R, Q),
	solucao(Q).

% permutacao(?L, ?P) is nondet
% Verdadeiro se P é uma permutação da lista L
permutacao(L, P) :-
	permutation(L,P).

%% -------------------------- VERSÃO COM BACKTRACKING --------------------------
% rainhas_n(?Q, +N) is nondet
% predicado "interface" para o rainhas/3
rainhas_n(Q, N) :-
	rainhas_n(Q, N, N).

% rainhas_n(?Q, +N, +T) is nondet
% Verdadeiro se Q é uma solução de tamanho T com N rainhas.
% Este é um predicado auxiliar e não deve ser chamado diretamente.
% Sua prova deve ser realizada com N = T.
% Exemplo:
%  ?- rainhas_n(Q, 5, 5).
%  Q = [4, 2, 5, 3, 1] ;
%  Q = [3, 5, 2, 4, 1] ;
%  Q = [5, 3, 1, 4, 2] ;
%  ...
rainhas_n([R|Rs], N, T) :-
	T > 0, !,
	T0 is T-1,
	write_canonical(R),
		write_canonical(Rs),
			write_canonical(N),
				write_canonical(T),


	rainhas_n(Rs, N, T0),
	entre(1, N, R),
	solucao([R|Rs]).

rainhas_n([], _, 0).

%% solucao(+Q) is semidet
% Verdadeiro se Q é uma solução N-rainhas
% Este predicado apenas verifica se Q é uma solução, e não a constrói.
% Exemplo:
%  ?- solucao([4, 5, 3, 2, 1]).
%   true.
solucao(Q) :-
	not_repetidos(Q),
	seguro(Q),
	!.

% sequencia(+I, +F, ?S) is semidet
% Verdadeiro se S é uma lista com os números inteiros entre I e F (inclusive)
sequencia(I, F, R1) :-
	findall(R,between(I,F,R), R1)	.

not_repetidos([]):-
	true.

not_repetidos([X|XS]) :-
	not(member(X, XS)),
	not_repetidos(XS).

%% entre(+I, +F, ?V) is nondet
% Verdadeiro se V é um número natural entre I e F (inclusive).
% Exemplo:
%  ?- entre(1, 3, V).
%  V = 1;
%  V = 2;
%  V = 3;
%  false.
entre(I, F, V) :-
	V >= I,
	V =< F.

seguro([]).

seguro([L|Ls]) :-
  not_proibido(L, Ls,1),
  seguro(Ls).

not_proibido(_,[],_).

not_proibido(Y,[Y1|Ys],Coluna_Atual) :-
 Y1-Y=\=Coluna_Atual,
 Y-Y1=\=Coluna_Atual,
 Prox_Coluna is Coluna_Atual + 1,
 not_proibido(Y,Ys,Prox_Coluna).







